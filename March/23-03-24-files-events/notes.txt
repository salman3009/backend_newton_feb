files
//creating file 
//reading file 
//updating file 
we are using predefined module name: fs/promises 
package name: "fs/promises" 
//asynchronous operation.
1.Creating file:
Syntax:
const global = require('fs/promises');
global.writeFile("fileName","any content");

2.Reading file:
Syntax:
const global = require('fs/promises');
global.readFile("fileName").toString();

3.deleting file 
Syntax:
const global = require('fs/promises');
global.unlink("fileName");

4.updating file 
syntax:
const global = require('fs/promises');
global.appendFile("fileName","content);
//If existing file is not available it will create new file.

=======================================================
Events Module:
package name:events 
//user defined events. Like similar to onclick,onchange in frontend. 
//It is use to create and handle custom events. 
//Event Emitter class can be used to create and handle custom events 
syntax:
const Emitter = require('events');

const eventHandler = new Emitter();

//listener
eventHandler.on('click',()=>{
    console.log("events trigger");
})

//trigger event
eventHandler.emit('click');
=====================================================
http module:
package name: http 
methods name:GET,POST 
GET - It will bring data 
POST - it will receive data 
local domain name:http://localhost:8080
//we are creating web server to listen get method or post method 
//http can send html file,css file,txt file, json data 

header http method
status code:(200 or 300 or 400 or 500)it will tell frontend success or failure of the request 
content type:'text/json','text/plain','text/html'
==========================================================







